4.5. Loop Analysis
In this lesson, you will practice tracing through code with loops and analyzing loops to determine how many times they run.
4.5.1. Tracing Loops
Let’s practice tracing through loops with many variables. Remember to make a tracing table to keep track of all the variables, the iterations, and the output.
 Coding Exercise
Here is a complex loop. See if you can trace the code on paper by making a tracing table to predict what the code will do when you run it. Click on the this Java visualizer link or the Code Lens button to help you step through the code.
Can you trace through this code? Add in output statements System.out.println("var1: " + var1 + " var2: " + var2); before the loop and inside the loop at the end to keep track of the variables and run. Click on the Code Lens button to visualize the code step by step.
Save & RunLoad HistoryShow CodeLensShare Code
1
public class Trace
2
{
3
    public static void main(String[] args)
4
    {
5
        int var1 = 3;
6
        int var2 = 2;
7
​
8
        while ((var2 != 0) && ((var1 / var2) >= 0))
9
        {
10
            var1 = var1 + 1;
11
            var2 = var2 - 1;
12
        }
13
    }
14
}
15
var1 = 5, var2 = 0 
Activity: 4.5.1.1 ActiveCode (example_trace_loop)
Did your trace table look like the following?

Figure 1: A table showing the values of all of the variables each time through the loop. The 0 means before the first loop.
 Check your understanding
4-5-2: What are the values of var1 and var2 when the code finishes executing?
int var1 = 0;
int var2 = 2;

while ((var2 != 0) && ((var1 / var2) >= 0))
{
   var1 = var1 + 1;
   var2 = var2 -1;
}
( )A. var1 = 1, var2 = 1
(X)B. var1 = 2, var2 = 0
( )C. var1 = 3, var2 = -1
( )D. var1 = 0, var2 = 2
( )E. The loop will cause a run-time error with a division by zero
Check MeCompare me
✔️ The loop stopped because var2 = 0. After the first execution of the loop var1 = 1 and var2 = 1. After the second execution of the loop var1 = 2 and var2 = 0. This stops the loop and doesn't execute the second part of the complex conditional.
Activity: 4.5.1.2 Multiple Choice (qlb_2_2)
4-5-3: What are the values of x and y when the code finishes executing?
int x = 2;
int y = 5;

while (y > 2 && x < y)
{
   x = x + 1;
   y = y - 1;
}
( )A. x = 5, y = 2
( )B. x = 2, y = 5
( )C. x = 5, y = 2
( )D. x = 3, y = 4
(X)E. x = 4, y = 3
Check MeCompare me
✔️ The first time the loop changes to x = 3, y = 4, the second time x = 4, y = 3 then the loop will stop since x is not less than y anymore.
Activity: 4.5.1.3 Multiple Choice (qlb_2_3)
4.5.2. Counting Loop Iterations
Loops can be also analyzed to determine how many times they run. This is called run-time analysis or a statement execution count.
 Coding Exercise
How many stars are printed out in this loop? How many times does the loop run? Figure it out on paper before you run the code.
Save & Run 
Original - 1 of 1
Show CodeLensShare Code
1
public class CountLoop
2
{
3
​
4
   public static void main(String[] args)
5
   {
6
       for (int i = 3; i < 7; i++)
7
            System.out.print("*");
8
   }
9
}
10
4 stars 
Activity: 4.5.2.1 ActiveCode (countstars1)
If you made a trace table, you would know that the loop runs when i = 3, 4, 5, 6 but finishes as soon as i becomes 7 since that is not less than 7. So, the loop runs 4 times. Or you can use the shortcut formula in the note below.
Note
The number of times a loop executes can be calculated by (largestValue - smallestValue + 1).
• If the loop uses counter <= limit, limit is the largest value.
• If the loop uses counter < limit, limit-1 is the largest value that allows the loop to run.
In the code above the largest value that allows the loop to run is 6 (which is the largest value < 7) and the smallest value that allows the loop to execute is 3 so this loop executes (6 - 3 + 1 = 4 times).
 Coding Exercise
How many stars are printed out by the following loops? How many times do the loops run? Calculate on paper before you run the code.
Save & Run 
Original - 1 of 1
Show CodeLensShare Code
1
public class NestedLoops
2
{
3
​
4
   public static void main(String[] args)
5
   {
6
       for (int row = 0; row < 5; row++)
7
       {
8
           for (int col = 0; col < 10; col++)
9
           {
10
               System.out.print("*");
11
           }
12
           System.out.println();
13
       }
14
   }
15
}
16
50 stars
Activity: 4.5.2.2 ActiveCode (countstars)
Note
The number of times a nested for loop body is executed is the number of times the outer loop runs multiplied by the number of times the inner loop runs (outer loop runs * inner loop runs).
For the example above, the outer loop executes 4-0+1= 5 times and the inner 9-0+1=10 times so the total is 5 * 10 = 50.
4.5.3.  Programming Challenge : POGIL Analyzing Loops
Me and Jacob did this together. He made the tables on paper and turned them in. 
We encourage you to do this activity as a POGIL (Process Oriented Guided Inquiry Learning) group activity. POGIL groups are self-managed teams of up to 4 students where everyone has a POGIL role and works together to solve the problems, making sure that everyone in the team participates and learns.
Do the following exercises in your group. Make sure you draw the trace tables keeping track of all the variables in the loops. Use the formulas to determine how many times the loops run. If your group finishes early, do some of the multiple-choice problems in the 4.6 Practice and Summary section of this unit.
4-5-6: How many times does the following code print a *?
for (int i = 3; i < 8; i++)
{
    for (int y = 1; y < 5; y++)
    {
        System.out.print("*");
    }
    System.out.println();
}
( )A. 40
( )B. 20
( )C. 24
( )D. 30
Check MeCompare me
✔️ The outer loop executes 7-3+1=5 times and the inner 4-1+1=4 so this will print 5 * 4 = 20 stars.
Activity: 4.5.3.1 Multiple Choice (qln_6_1)
4-5-7: What does the following code print?
for (int i = 2; i < 8; i++)
{
    for (int y = 1; y <= 5; y++)
    {
        System.out.print("*");
    }
    System.out.println();
}
( )A. A rectangle of 8 rows with 5 stars per row.
( )B. A rectangle of 8 rows with 4 stars per row.
( )C. A rectangle of 6 rows with 5 stars per row.
( )D. A rectangle of 6 rows with 4 stars per row.
Check MeCompare me
✔️ The outer loop executes 8-2+1=6 times so there are 6 rows and the inner loop executes 5-1+1=5 times so there are 5 columns.
Activity: 4.5.3.2 Multiple Choice (qln_6_2)
4-5-8: What does the following print?
for (int i = 3; i <= 9; i++)
{
   for (int j = 6; j > 0; j--)
   {
       System.out.print("*");
   }
   System.out.println();
}
( )A. A rectangle of 9 rows and 5 stars per row.
( )B. A rectangle of 6 rows and 6 stars per row.
( )C. A rectangle of 7 rows and 5 stars per row.
( )D. A rectangle of 7 rows and 6 stars per row.
Check MeCompare me
✔️ The outer loop executes 9 - 3 + 1 = 7 times and the inner 6 - 1 + 1 = 6 times.
Activity: 4.5.3.3 Multiple Choice (qln_6_3)
4-5-9: Consider the following code segment. How many times is the string “Hi!” printed as a result of executing the code segment?
int i = 0;
while (i <= 4)
{
  for (int j = 0; j < 3; j++)
  {
    System.out.println("Hi!");
  }
  i++;
}
( )A. 15
( )B. 12
( )C. 10
( )D. 8
Check MeCompare me
✔️ The outer loop executes 4-0+1=5 times and the inner loop 2-0+1=3, so hi is printed 5*3 = 15 times
Activity: 4.5.3.4 Multiple Choice (qln4)
4.5.4. Summary
• A trace table can be used to keep track of the variables and their values throughout each iteration of the loop.
• We can determine the number of times a code segment will execute with a statement execution count. This is called run-time analysis.
• The number of times a loop executes can be calculated by (largestValue - smallestValue + 1) where these are the largest and smallest values of the loop counter variable possible in the body of the loop.
• The number of times a nested for-loop runs is the number of times the outer loop runs times the number of times the inner loop runs.
4.5.5. Loop Analysis Game
Try the game below to practice loop analysis. Click on Loops and click on the number of times the loop runs. For an added challenge, try the check boxes for Backwards, Do While, and Nested. We encourage you to work in pairs and see how high a score you can get.


Joel Perry, USAF Retired
Computer Science Teacher
Westminster High School
1225 Washington Road
Westminster, MD 21157
