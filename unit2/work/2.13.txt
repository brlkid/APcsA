2.13. Coding Practice
Write the code to print a random number from 1 to 100. You can use Math.random() to get a value between 0 and not quite 1.
1
public class Test1
2
{
3
    public static void main(String[] args)
4
    {
5
int number = Math.random()*200;
6
    }
7
}
8
​
Activity: 2.13.1 ActiveCode (ch3Ex9q)
The following code should get the first letter of the first name, middle name, and last name and append (concatenate) them together and then return them all in lowercase. However, the code has errors. Fix the code so that it compiles and runs correctly.
Save & RunLoad HistoryShow CodeLensShare Code
1
public class Test1
2
{
3
    public static void main(String[] args)
4
    {
5
        String firstName = "Sofia';
6
        String middleName = "Maria";
7
        String lastName  "Hernandez";
8
        String initials = firstname.substring(0,1).toLowerCase() +
9
                          middleName.subString(0,1).toLowerCase() +
10
                          lastName.substring(0,1).toLowerCase();
11
        System.out.println(initials);
12
    }
13
}
14
​
Activity: 2.13.3 ActiveCode (ch4Ex1q)
The following code should print the first 3 letters of the string message all in lowercase letters. However, the code has errors. Fix the errors so that the code runs as intended.
1
public class Test1
2
{
3
    public static void main(String[] args)
4
    {
5
        String message = "Meet me by the bridge":
6
        String part = message.substring(0,2);
7
        String lower = part.toLowerCase();
8
        System.println(lower);
9
    }
10
}
11
​
Activity: 2.13.5 ActiveCode (ch4Ex4q)
The following code starts with String firstNameCaps = ALEX; and should print Alex. Use the toLowerCase and substring methods to do this task.
1
public class Test1
2
{
3
    public static void main(String[] args)
4
    {
5
        String name1 = "ALEX";
6
String cap = name1.substring(0,1);
7
String lower = name1.substring(1,name1.length());
8
String firstNameCaps = cap+lower;
9
        System.out.println(firstNameCaps);
10
    }
11
}
12
​
Activity: 2.13.7 ActiveCode (ch4Ex10q)
The following code should remove the word “very ” (and following space) from the message and print the new message. You can use indexOf to find the position of a substring in your string. You can use substring to create a new string removing the word.
1
public class Test1
2
{
3
    public static void main(String[] args)
4
    {
5
        String message = "I am very happy!";
6
        String target = "very ";
7
int index = message.indexOf(target);
String chunk1 = message.substring(0,index);
String chunk2(index+target.length(),message.length());
8
    }
9
}
10
​
Activity: 2.13.9 ActiveCode (ch4Ex11q)
The following code should replace lol in the message with laugh out loud and print the new message using indexOf and substring.
1
public class Test1
2
{
3
    public static void main(String[] args)
4
    {
5
        String message = "That was great - lol.";
6
chunk1 = message.substring(0,message.indexOf("lol");
message = chunk1+"laugh out loud.";
7
    }
8
}
9
​
Activity: 2.13.11 ActiveCode (ch4Ex12q)
For more practice with Strings see problems at http://codingbat.com/java/String-1.
• http://codingbat.com/prob/p161056
• http://codingbat.com/prob/p147483
• http://codingbat.com/prob/p108853
• http://codingbat.com/prob/p130896
• http://codingbat.com/prob/p130781

Joel Perry, USAF Retired
Computer Science Teacher
Westminster High School
1225 Washington Road
Westminster, MD 21157
